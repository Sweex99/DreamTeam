1.В якому з алгоритмів хід обчислень визначається набором вхідних даних:
*1 Розгалужений 
2 Циклічний
3 Лінійний
4 Змішаний
2. багаторядковий коментар:
1 //…
*2 /*…*/
3 */…/*
4 /…/
3. десяткове число зі знаком:
*1 %с
2 %d
3 %f
4 %s
4. Повернення на початок рядка:
*1 \n
2 \r
3 \v
4 \t
5.Префіксний інкремент:
*1 х++
2 х--
3 ++х
4--х
6. √х :
*1 sqrt(x)
2 abs(x)
3 log(x)
4 can(x)
7.Набір однотипних даних, для збереження та обробки яких використовуються одне ім’я, а елементи масиву розрізняються за їх порядковим номером:
*1 масив даних
2 функція
3 динамічний масив
4 структура
8. ЯК ВИЗНАЧАЄТЬСЯ ТИП ЧИСЛОВОЇ КОНСТАНТИ ЗА ЗАМОВЧУВАННЯМ?
*1 числова стала належіть до цілого типу
2 числова стала належіть до типу float
3 тип визначається за значенням
4 тип визначається за першою літерою назви
9.ЯК ВКАЗАТИ ТИП ДЛЯ СПИСКУ ЗМІННІХ?
1 Для кожної змінної окремо через крапку з комою
2 Для кожної змінної окремо через кому
*3 <тип> <список через кому>
4 <тип> <список через крапку з комою>
10.ВИЗНАЧИТЬ ЗНАЧЕННЯ ЗМІННОЇ b ПІСЛЯ ВИКОНАННЯ НАСТУПНИХ КОМАНД: int a, b; float c; a=3; c=2.6; b=a*c;
1 6
*2 7
3 7.2
4 9
11. ВИЗНАЧИТЬ ЗНАЧЕННЯ ЗМІННОЇ b ПІСЛЯ ВИКОНАННЯ НАСТУПНИХ КОМАНД: int a, b; float c; a=3; c=3.5; b=a*(int)c;
*1 9
2 10
3 11
4 12
12.ВИЗНАЧИТЬ ЗНАЧЕННЯ ЗМІННОЇ b ПІСЛЯ ВИКОНАННЯ НАСТУПНИХ КОМАНД: int a, b; float c; a=5; c=3.3; b=(int)(a*c);
1 15
*2 16
3 17
4 20
13.ВИЗНАЧИТЬ ЗНАЧЕННЯ ЗМІННОЇ b ПІСЛЯ ВИКОНАННЯ НАСТУПНИХ КОМАНД: int a, b; a=5; b=3.5*++a;
1 15
2 17
3 18
*4 21
14. ВИЗНАЧИТЬ ЗНАЧЕННЯ ЗМІННОЇ  b ПІСЛЯ ВИКОНАННЯ НАСТУПНИХ КОМАНД: int a, b; a=2; b=4.5/(a++);
1 1
2 1.5
*3 2
4 2.25
15. ВИЗНАЧИТЬ ЗНАЧЕННЯ ЗМІННОЇ b ПІСЛЯ ВИКОНАННЯ НАСТУПНИХ КОМАНД: int a, b; a=4; 
 b=35/--a;
1  8
2 9
*3 11
4 12
16. ВИЗНАЧИТЬ ЗНАЧЕННЯ ЗМІННИОЇ  b ПІСЛЯ ВИКОНАННЯ НАСТУПНИХ КОМАНД: int a, b; a=2; b=4.5*(a--);
1 4
2 5
3 8
*4 9
17. ВКАЖІТЬ ЗАПИС МОВОЮ С++ ВИРАЗУ  
1 y=sqrt(x*x+7.2) –abs(x-5);
2 y=pow(x+7.2, 1/5) –abs(x-5);
*3 y=pow(pow(x, 2)+7.2, 1/5) –abs(x-5);
4  y=pow(x*x+7.2, 1/5 –abs(x-5));
18. ВКАЖІТЬ ЗАПИС МОВОЮ С++ ВИРАЗУ  
1 y=2*pow(sin(a), 2)/M_PI*b-tan(b);
2 y=2*pow(sin(a), 2)/(M_PI*b)-tan(b);
*3 y=2*pow(sin(a), 2)/(M_PI*b)-1/tan(b);
4 y=2*sin(pow(a, 2))/(M_PI*b)-1/tan(b);
19. ВКАЖІТЬ ВИРАЗ, ЩО ЗАПИСАНО МОВОЮ С++  z=sqrt(exp(pow(x, 2-a))/pow10(3*b-1.7*k));
 
 
 
 
20. ВКАЖІТЬ ВИРАЗ, ЩО ЗАПИСАНО МОВОЮ С++  z=cos(pow(x, 3))-pow(sin(x), 2)/(2/sqrt(3)-4.5);
 
 
 
 

21. Що таке цикл?
*1 ім’я змінної
2 оператор присвоєння
3 оператор призначений для багаторазового використання певних інструкцій
22. Вкажіть об'єктно-орієнтовану мову програмування 
*a) Всі варіанти відповідей 
b) С + + 
c) Eiffel 
d) Java
23. Яку дію виконує оператор "cout"? 
*a) вивід даних на екран
b) введення даних з клавіатури
c) видалення елемента масиву
d) немає вірної відповіді
24.Що означає наступна інструкція? cin x;
*a) введення значення в змінну х зі стандартного потоку cin
b) виведення значення змінної х в стандартний поток cout
c) введення двох змінних
d) немає вірної відповіді
25. Для використання файлових потоків треба включити заголовний файл…
*a) fstream 
b) iostream 
c) stdio.h 
d) conio.h
26. Вкажіть лінійну структуру даних:
*1 вектор
2 дерево
3 граф
4 багатозвя’зні списки
27. Вкажіть нелінійну структуру даних: 
*1 дерево
2 вектор
3 масив
4 черга
28. Вкажіть лінійну структуру даних:
*1 масив
2 дерево
3 граф
4 багатозвя’зні списки
29.Вкажіть нелінійну структуру даних: 
*1 граф
2 вектор
3 масив
4 черга
30.Вкажіть статичну структуру даних:
*1 масив
2 стек 
3 граф
4 дерево
31.Вкажіть статичну структуру даних:
*1 таблиці
2 стек 
3 граф
4 дерево
32.Вкажіть статичну структуру даних:
*1 множини
2 стек 
3 граф
4 дерево
33. Вкажіть напівстатичну  структуру даних:
*1 стек
2 множина 
3 таблиці
4 граф
34. Вкажіть напівстатичну  структуру даних:
*1 черга
2 множина 
3 таблиці
4 граф
35.Вкажіть напівстатичну  структуру даних:
*1 дек
2 множина 
3 таблиці
4 граф
36. Вкажіть динамічну структуру даних:
*1 граф
2 черга 
3 дек
4 масив
37. Вкажіть динамічну структуру даних:
*1 лінійні та розгалужені зв’язні списки
2 черга 
3 дек
4 масив
38. Скінченна впорядкована множина простих даних одного типу – це:
*1 вектор
2 масив
3 стандартна бібліотека шаблонів
4 список
39.Чи може піддерево бути представлене у вигляді окремого дерева:
*1 так
2 ні
3 ніколи
4 завжди
40.Операція вибірка з початку черги:
*1 PushBack
2 PushFront  
3 PopBack  
4 PopFront
41.Операція додавання в кінець черги:
1 PushBack
2 PushFront  
3 PopBack  
*4 PopFront
 	42. Операція додавання в початок черги
1 PushBack
2 PushFront  
*3 PopBack  
4 PopFront
43. Операція вибірка з кінця черги:
1 PushBack
*2 PushFront  
3 PopBack  
4 PopFront
44. Що не є операцією ітератора:
*1 =+
2 ++
== 
4 *
45.Що не є операцією ітератора:
*1 =-
2 ++
== 
4 *
46. Що не є операцією ітератора:
*1 +=
2 ++
3 == 
4 *
47. Що таке потужність графа?
*1 кількість ребер
2 кількість вершин
3 кількість ребер + кількість вершин
4 кількіст ребер - кількість вершин
48. Що є способом обходу бінарного дерева:
*1 всі варіанти
2 зворотній обхід
3 прямий обхід
4 обхід дерева по рівнях 
49.Функція генерації впорядкованої за зростанням множини:
*1 GenerationSet
2 ShowSet
3 UnionSet
4 InsertSet
50. Функція виводу множини на екран:
1 GenerationSet
*2 ShowSet
3 UnionSet
4 InsertSet
51. Функція вставки з перевіркою чи такий елемент присутній в множині:
1 GenerationSet
2 ShowSet
3 UnionSet
*4 InsertSet
52. Функція виконання операцій об’єднання двох множин:
1 GenerationSet
2 ShowSet
*3 UnionSet
4 InsertSet
53.Побітове І:
*1 &
2 ~
3 |
4 ^
54. Побітове АБО:
1 &
2 ~
*3 |
4 ^
55. Побітове НЕ:
1 &
*2 ~
3 |
4 ^
56. Побітова операція додавання за модулем два:
1 &
2 ~
3 |
*4 ^
57. Операція top:
*1 отримання значення верхнього елементу
2 перевірка наявності елементів в стеку
3 очистка стеку
4 отримання розміру стеку
58.Операція isEmpty:
1 отримання значення верхнього елементу
* перевірка наявності елементів в стеку
3 очистка стеку
4 отримання розміру стеку
59. Операція clear:
1 отримання значення верхнього елементу
2 перевірка наявності елементів в стеку
*3 очистка стеку
4 отримання розміру стеку
60. Операція size:
1 отримання значення верхнього елементу
2 перевірка наявності елементів в стеку
3 очистка стеку
*4 отримання розміру стеку
61.Операція isFull:
*1 перевірка заповненості стеку
2 перевірка наявності елементів в стеку
3 очистка стеку
4 отримання розміру стеку
62. Операція swap:
*1 поміняти місцями два верхніх елементи стеку
2 перевірка наявності елементів в стеку
3 очистка стеку
4 отримання розміру стеку
63. Двозв’язний список, що зберігається в довільних областях пам’яті:
*1 контейнер list
2 дек
3 масив
4 вектор
64. Сукупність елементів одного типу даних, впорядкованих за індексами – це:
*1 масив
2 вектор
3 структура
4 список
65. Впорядкований асоціативний масив пар елементів що складаються з унікальних ключів та відповідних їм значень: 
*1 map
2 set
3 multiset
4 multimap
66. Відсортована множина однотипних елементів, що не повторюються: 
1 map
*2 set
3 multiset
4 multimap
67. Контейнер для збереження бітових масок:
*1 bitset
2 basic_string
3 valarry
4 list
68. Контейнер для збереження та обробки рядків:
1 bitset
*2 basic_string
3 valarry
4 list
69. Контейнер для збереження числових масивів та їх оптимізації:
1 bitset
2 basic_string
*3 valarry
4 list
70. Перевірка чи є вектор порожнім:
*1 empty ()
2 V.clear()
3 swap()
4 max_element

